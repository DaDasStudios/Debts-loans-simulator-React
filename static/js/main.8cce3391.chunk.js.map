{"version":3,"sources":["components/Loan.js","components/Calculations.js","components/Simulations.js","components/Navbar.js","components/Samples/Popover.js","components/Users/User.js","components/Users/Users.js","components/Results.js","components/Records.js","App.js","reportWebVitals.js","index.js"],"names":["Loan","props","onChangeEntry","e","target","name","updatePercentageInput","value","updateGlobalState","loan","interest","fees","timeUnity","react_default","a","createElement","Fragment","className","htmlFor","min","type","id","aria-describedby","onChange","onBlur","blurPercetageInput","Calculations","replace","parseFloat","_useState","useState","payments","_useState2","Object","slicedToArray","state","setState","feeGain","capitalSubscription","feePayment","totalGains","paidRatio","readOnly","toFixed","Simulations","amountOfUsers","setAmountOfUsers","_useState3","age","dni","address","phone","email","scamRatio","_useState4","userState","setUserState","handleUserInformation","objectSpread","defineProperty","handleLoanInformation","onSubmit","preventDefault","createUser","monthlyInterest","interestGainsYear","interestGainsMonth","capitalYear","capitalMonth","_userState$loan","CONVERT_TO_MONTHS","months","simulationsInTimeLapse","calcSimulationsInTimelapse","CONVERT","convertedTimeUnity","gainsMonth","gainsYear","annualInterest","randomMeasure","Math","random","newUser","uuidv4","scam","appendUser","cont","setTimeout","max","parseInt","Navbar","react_router_dom","to","Popover","isHidden","concat","User","_props$self","self","userUtil","setUserUtil","style","maxWidth","aria-label","onClick","deleteUser","toLowerCase","Samples_Popover","Users","users","setUsers","loans","filter","length","map","user","Users_User","key","Results","results","refresh","setResults","initialResults","gainsPerYear","gainsPerMonth","successfulLoans","totalLosses","interestLossesYear","interestLossesMonth","lossesPerYear","lossesPerMonth","failedLoans","totalMoneyReceived","totalMoneyLost","role","components_Users_Users","Records","App","loansState","loansSetState","singleLoanState","singleLoanSetState","_useState5","_useState6","components_Navbar","react_router","exact","path","element","components_Loan","cheakOutInput","components_Calculations","components_Simulations","push","updates","components_Results","forEach","components_Records","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8cce3391.chunk.js","sourcesContent":["import React from 'react'\n\nconst Loan = (props) => {\n\n    const onChangeEntry = e => {\n        switch (e.target.name) {\n            case 'interest':\n                props.updatePercentageInput(e.target.name, e.target.value)\n                break;\n\n            default:\n                props.updateGlobalState(e.target.name, e.target.value)\n                break;\n        }\n    }\n\n\n    const { loan, interest, fees, timeUnity } = props\n\n    return (\n        <>\n            <form className=\"col-md-6\">\n                <legend>Datos para el cliente</legend>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"loan_amount\" className=\"form-label\">Monto del préstamo</label>\n                    <input min={0} name='loan' type=\"number\" className=\"form-control\" id=\"loan_amount\" aria-describedby=\"loan_amountHelp\" value={loan} onChange={onChangeEntry} />\n                    <div id=\"loan_amountHelp\" className=\"form-text\">Inserte una cantidad de dinero que desee simular</div>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"interest_rate\" className=\"form-label\">Tasa de interes</label>\n                    <input name='interest' type=\"text\" className=\"form-control\" id=\"interest_rate\" aria-describedby=\"interest_rateHelp\" value={interest} onChange={onChangeEntry} onBlur={props.blurPercetageInput} />\n                    <div id=\"interest_rateHelp\" className=\"form-text\">Inserte el porcentaje de la tasa de interes deseada</div>\n                </div>\n                <div className=\"row g-3 mb-3\">\n                    <div className=\"col-md-6\">\n                        <label htmlFor=\"fees\" className=\"form-label\">Cuotas</label>\n                        <input name='fees' type=\"number\" className=\"form-control\" id=\"fees\" aria-describedby=\"feesHelp\" value={fees} onChange={onChangeEntry} min={1} />\n                        <div id=\"feesHelp\" className=\"form-text\">Inserte la cantidad de cuotas para pagar el préstamo</div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <label htmlFor=\"time_unity\" className=\"form-label\">Unidad de tiempo</label>\n                        <select className='form-select' name=\"timeUnity\" id=\"time_unity\" onChange={onChangeEntry} value={timeUnity}>\n                            <option value=\"Días\">Días</option>\n                            <option value=\"Semanas\">Semanas</option>\n                            <option value=\"Quincenas\">Quincenas</option>\n                            <option value=\"Meses\">Meses</option>\n                            <option value=\"Años\">Años</option>\n                        </select>\n                    </div>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default Loan","import React, { useState } from 'react'\n\nconst Calculations = props => {\n\n    let { loan, interest, fees } = props\n    // * Remove the % symbol of the interest field\n    interest = interest.replace('%', '')\n    loan = parseFloat(loan)\n\n    const initialState = {\n        payments: 0\n    }\n    const [state, setState] = useState(initialState)\n\n    // ? Calculations to use in other calculations\n    const feeGain = loan * (interest / 100)\n    const capitalSubscription = loan / fees\n    const feePayment = capitalSubscription + feeGain\n    const totalGains = feeGain * fees\n    const paidRatio = (totalGains / loan) * 100\n\n    return (\n        <>\n            <div className=\"col-md-6\">\n                <legend>Cálculos resultantes</legend>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"fee_gain\" className=\"form-label\">Ganancia por cuota</label>\n                    <input readOnly type=\"number\" className=\"form-control\" id=\"fee_gain\" aria-describedby=\"fee_gainHelp\" value={feeGain} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"capital_subcription\" className=\"form-label\">Abono a capital</label>\n                    <input readOnly type=\"number\" className=\"form-control\" id=\"capital_subcription\" aria-describedby=\"capital_subcriptionHelp\" value={capitalSubscription.toFixed(3)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"fee_pay\" className=\"form-label\">Pago por cuota</label>\n                    <input readOnly type=\"number\" className=\"form-control\" id=\"fee_pay\" aria-describedby=\"fee_payHelp\" value={feePayment.toFixed(3)} />\n                </div>\n                <hr />\n\n                <div className=\"mb-3\">\n                    <label htmlFor=\"total_gains\" className=\"form-label\">Ganancias totales o intereses totales</label>\n                    <input readOnly type=\"number\" className=\"form-control\" id=\"total_gains\" aria-describedby=\"total_gainsHelp\" value={totalGains} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"total_paid\" className=\"form-label\">Total pagado</label>\n                    <input readOnly type=\"number\" className=\"form-control\" id=\"total_paid\" aria-describedby=\"total_paidHelp\" value={totalGains + loan} />\n                    <div id=\"total_paidHelp\" className=\"form-text\">Corresponde al total de dinero pagado por el cliente por el crédito, esto es la suma de los intereses pagados con el préstamo inicial</div>\n\n                </div>\n                <hr />\n\n                <div className=\"row g-3 mb-3\">\n                    <div className=\"col-md-6\">\n                        <label htmlFor=\"gains_per_fee\" className=\"form-label\">Ganancias en &#945; pagos </label>\n                        <input readOnly type=\"number\" className=\"form-control\" id=\"gains_per_fee\" aria-describedby=\"gains_per_feeHelp\" value={state.payments * feeGain} />\n                        <div id=\"gains_per_feeHelp\" className=\"form-text\">Inserte hasta qué cantidad de cuotas desea simular los pagos</div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <label htmlFor=\"fees_to_simulate\" className=\"form-label\">Pagos realizados</label>\n                        <input type=\"number\" className=\"form-control\" id=\"fees_to_simulate\" min={0} aria-describedby=\"fees_to_simulateHelp\" value={state.payments} onChange={e => { setState({ 'payments': e.target.value }) }} />\n                    </div>\n                </div>\n                <div className=\"row g-3 mb-3\">\n                    <div className=\"col-md-6\">\n                        <label htmlFor=\"percentage_paid\" className=\"form-label\">Porcentaje total extra pagado</label>\n                        <input readOnly type=\"text\" className=\"form-control\" id=\"percentage_paid\" aria-describedby=\"percentage_paidHelp\" value={paidRatio + '%'} />\n                        <div id=\"percentage_paidHelp\" className=\"form-text\">Porcentaje del préstamo pagado por el mismo al culminar los pagos</div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <label htmlFor=\"percentage_per_fee\" className=\"form-label\">Porcentaje por cuota pagado</label>\n                        <input readOnly type=\"text\" className=\"form-control\" id=\"percentage_per_fee\" aria-describedby=\"percentage_per_feeHelp\" value={(paidRatio / fees).toFixed(3) + '%'} />\n                        <div id=\"percentage_per_feeHelp\" className=\"form-text\">Porcentaje correspondiente a cada cuota del prestamo</div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Calculations\n\n","import React, { useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\n// * Components\n\nconst Simulations = (props) => {\n\n    // todo: State\n    const singleUserinitialState = {\n        id: null,\n        name: 'Example',\n        age: 18,\n        dni: 1234567,\n        address: '...',\n        phone: '+57 3008508791',\n        email: 'example@example.com',\n        loan: {\n            loan: 350000,\n            interest: 10,\n            fees: 6,\n            timeUnity: \"Meses(s)\",\n            scamRatio: 30\n        }\n    }\n\n    const [amountOfUsers, setAmountOfUsers] = useState(1)\n\n    const [userState, setUserState] = useState(singleUserinitialState)\n\n    // ? Functions to handle inputs\n\n    const handleSubmit = e => {\n        // ? To not submit the form\n        e.preventDefault()\n\n        const createUser = () => {\n            // todo: Do all the needed calculations \n            let { loan, interest, fees, timeUnity, scamRatio } = userState.loan\n            const { name, age, dni, address, phone, email } = userState\n\n            // ? Some calculations\n            const feeGain = loan * (interest / 100)\n            const capitalSubscription = loan / fees\n            const feePayment = capitalSubscription + feeGain\n            const totalGains = feeGain * fees\n            const paidRatio = (totalGains / loan) * 100\n\n            // todo: Needed operations in order to convert the time-long into months\n            const CONVERT_TO_MONTHS = {\n                YEARS: 12,\n                FORTNIGHTS: 1 / 2,\n                WEEKS: 1 / 4,\n                DAYS: 1 / 30\n            }\n\n            // ? Convert any unity of time into months\n            let months = fees\n            \n            // todo: A object with all the calculations that depend of a unity of time \n            let simulationsInTimeLapse = {}\n\n            // todo: Initializating the needed variables\n            let annualInterest, monthlyInterest, interestGainsYear, interestGainsMonth, gainsYear, gainsMonth, capitalYear, capitalMonth\n\n            const calcSimulationsInTimelapse = (months, CONVERT) => {\n                const convertedTimeUnity = 1/CONVERT\n                capitalMonth = fees <= convertedTimeUnity ? capitalSubscription * fees : capitalSubscription * convertedTimeUnity\n                capitalYear = months <= CONVERT_TO_MONTHS.YEARS ? capitalMonth * months : capitalMonth * CONVERT_TO_MONTHS.YEARS\n                interestGainsMonth = fees <= convertedTimeUnity ? feeGain * fees : feeGain * convertedTimeUnity\n                interestGainsYear = months <= CONVERT_TO_MONTHS.YEARS ? interestGainsMonth * months : interestGainsMonth * CONVERT_TO_MONTHS.YEARS\n                gainsMonth = capitalMonth + interestGainsMonth\n                gainsYear = capitalYear + interestGainsYear\n                monthlyInterest = fees <= convertedTimeUnity ? interest * fees : interest * convertedTimeUnity\n                annualInterest = months <= CONVERT_TO_MONTHS.YEARS ? monthlyInterest * months : monthlyInterest * CONVERT_TO_MONTHS.YEARS\n\n                return {capitalMonth, capitalYear, interestGainsMonth, interestGainsYear, gainsMonth, gainsYear, monthlyInterest, annualInterest}\n            }\n\n            switch (timeUnity) {\n                case 'Día(s)':\n                    months = fees * CONVERT_TO_MONTHS.DAYS\n                    simulationsInTimeLapse = calcSimulationsInTimelapse(months, CONVERT_TO_MONTHS.DAYS)\n                    break;\n                case \"Semana(s)\":\n                    months = fees * CONVERT_TO_MONTHS.WEEKS\n                    simulationsInTimeLapse = calcSimulationsInTimelapse(months, CONVERT_TO_MONTHS.WEEKS)\n                    break\n                case \"Quincena(s)\":\n                    months = fees * CONVERT_TO_MONTHS.FORTNIGHTS\n                    simulationsInTimeLapse = calcSimulationsInTimelapse(months, CONVERT_TO_MONTHS.FORTNIGHTS)\n                    break\n                case \"Año(s)\":\n                    months = fees * CONVERT_TO_MONTHS.YEARS\n                    simulationsInTimeLapse = calcSimulationsInTimelapse(monthlyInterest, CONVERT_TO_MONTHS.YEARS)\n                    break\n                default:\n                    // * In case of months\n                    simulationsInTimeLapse = calcSimulationsInTimelapse(months, 1)\n                    break\n            }\n\n            // ? Create a new object to set into the state\n            const randomMeasure = Math.random() * 100\n            const newUser = {\n                id: uuidv4(),\n                name: name,\n                age: age,\n                dni: dni,\n                address: address,\n                phone: phone,\n                email: email,\n                loan: {\n                    loan: parseFloat(loan),\n                    interest: interest,\n                    fees: fees,\n                    timeUnity: timeUnity,\n                    months: months,\n                    scam: randomMeasure < scamRatio,\n                    scamRatio: scamRatio,\n                    feeGain, capitalSubscription, feePayment, totalGains, paidRatio,\n                    ...simulationsInTimeLapse,\n                }\n            }\n            props.appendUser(newUser)\n        }\n\n        // * Create the user the number of times needed\n        let cont = 0\n        do {\n            setTimeout(createUser, 50)\n            cont++\n        } while (cont < amountOfUsers);\n    }\n\n    const handleUserInformation = e => {\n        setUserState({ ...userState, [e.target.name]: e.target.value })\n    }\n\n    const handleLoanInformation = e => {\n        setUserState(\n            {\n                ...userState,\n                loan: {\n                    ...userState.loan, [e.target.name]: e.target.value\n                }\n            }\n        )\n    }\n\n    return (\n        <form onSubmit={handleSubmit} >\n            <div className='row g-3'>\n                <div className=\"col-md-6\">\n                    <legend>Añadir un nuevo usuario</legend>\n                    <div className=\"row g-3 mb-3\">\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"name\" className=\"form-label\">Nombre</label>\n                            <input name='name' type=\"text\" className=\"form-control\" id=\"name\" onChange={handleUserInformation} value={userState.name} />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"age\" className=\"form-label\">Edad</label>\n                            <input name='age' type=\"number\" className=\"form-control\" id=\"age\" onChange={handleUserInformation} value={userState.age} />\n                        </div>\n\n                    </div>\n                    <div className=\"row g-3 mb-3\">\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"dni\" className=\"form-label\">DNI</label>\n                            <input name='dni' type=\"number\" className=\"form-control\" id=\"dni\" onChange={handleUserInformation} value={userState.dni} />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"address\" className=\"form-label\">Dirección</label>\n                            <input name='address' type=\"text\" className=\"form-control\" id=\"address\" onChange={handleUserInformation} value={userState.address} />\n                        </div>\n\n                    </div>\n                    <div className=\"row g-3 mb-3\">\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"phone\" className=\"form-label\">Número</label>\n                            <input name='phone' type=\"tel\" className=\"form-control\" id=\"phone\" onChange={handleUserInformation} value={userState.phone} />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                            <input name='email' type=\"email\" className=\"form-control\" id=\"email\" onChange={handleUserInformation} value={userState.email} />\n                        </div>\n\n                    </div>\n                    <div className=\"row g-3 mb-3\">\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"scamRatio\" className=\"form-label\">Probabilidad de estafa</label>\n                            <input min={0} max={100} name='scamRatio' type=\"number\" className=\"form-control\" id=\"scamRatio\" onChange={handleLoanInformation} value={userState.loan.scamRatio} />\n                            <div className=\"form-text\">Rellene todos los campos del formulario para subir la información</div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"numberOfUsers\" className=\"form-label\">Cantidad de usuarios</label>\n                            <input min={1} max={200} name='numberOfUsers' type=\"number\" className=\"form-control\" id=\"numberOfUsers\" onChange={e => e.target.value === '' ? setAmountOfUsers(1) : setAmountOfUsers(parseInt(e.target.value))} value={amountOfUsers} />\n                            <div className=\"form-text\">El número de veces que el usuario será añadido</div>\n                        </div>\n                        <button type=\"submit\" className='btn btn-primary'>Añadir usuario</button>\n                    </div>\n\n                </div>\n                <div className=\"col-md-6\">\n                    <legend>Datos del préstamo</legend>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"loan_amount\" className=\"form-label\">Monto del préstamo</label>\n                        <input name='loan' type=\"number\" className=\"form-control\" id=\"loan_amount\" aria-describedby=\"loan_amountHelp\" onChange={handleLoanInformation} value={userState.loan.loan} />\n                        <div id=\"loan_amountHelp\" className=\"form-text\">Inserte una cantidad de dinero que desee simular</div>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"interest_rate\" className=\"form-label\">Tasa de interes</label>\n                        <input name='interest' type=\"text\" className=\"form-control\" id=\"interest_rate\" aria-describedby=\"interest_rateHelp\" onChange={handleLoanInformation} value={userState.loan.interest} />\n                        <div id=\"interest_rateHelp\" className=\"form-text\">Inserte el porcentaje de la tasa de interes deseada</div>\n                    </div>\n                    <div className=\"row g-3 mb-3\">\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"fees\" className=\"form-label\">Cuotas</label>\n                            <input name='fees' type=\"number\" className=\"form-control\" id=\"fees\" aria-describedby=\"feesHelp\" onChange={handleLoanInformation} value={userState.loan.fees} />\n                            <div id=\"feesHelp\" className=\"form-text\">Inserte la cantidad de cuotas para pagar el préstamo</div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label htmlFor=\"time_unity\" className=\"form-label\">Unidad de tiempo</label>\n                            <select className='form-select' name=\"timeUnity\" id=\"time_unity\" onChange={handleLoanInformation} value={userState.loan.timeUnity}>\n                                <option value=\"Mese(s)\">Meses</option>\n                                <option value=\"Quincena(s)\">Quincenas</option>\n                                <option value=\"Semana(s)\">Semanas</option>\n                                <option value=\"Día(s)\">Días</option>\n                                <option value=\"Año(s)\">Años</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Simulations","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg bg-light\">\n                <div className=\"container-fluid mx-3\">\n                    <Link to='/' className=\"navbar-brand\">Simulación</Link>\n                    <ul className=\"d-flex navbar-nav mb-2 mb-lg-0 justify-content-end\">\n\n                        <li className=\"nav-item\">\n                            <Link to='/simulations' className=\"nav-link\">Simular varios</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to='/records' className=\"nav-link\">Registros</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst Popover = (props) => {\n    const { isHidden, loan } = props\n    return (\n        <div className={`${isHidden ? 'hide' : 'show'} faded d-flex flex-column card p-1 mt-1 text-secondary`}>\n            <small >{`Interes por cuota: $${loan.feeGain}`}</small>\n            <small >{`Capital por cuota: $${loan.capitalSubscription.toFixed(2)}`}</small>\n            <small className='border-bottom mb-1 pb-1'>{`Pago por cuota: $${loan.feePayment.toFixed(2)}`}</small>\n            <small >{`Total intereses: $${loan.totalGains.toFixed(2)}`}</small>\n            <small className='border-bottom mb-1 pb-1'>{`Total pagado: $${loan.loan + loan.totalGains}`}</small>\n            <small >{`Ganancia anual: $${loan.gainsYear.toFixed(2)}`}</small>\n            <small className='border-bottom mb-1 pb-1'>{`Ganancia mensual: $${loan.gainsMonth.toFixed(2)}`}</small>\n            <small >{`Capital anual: $${loan.capitalYear.toFixed(2)}`}</small>\n            <small className='border-bottom mb-1 pb-1'>{`Capital mensual: $${loan.capitalMonth.toFixed(2)}`}</small>\n            <small >{`Ganancias intereses anuales: $${loan.interestGainsYear.toFixed(2)}`}</small>\n            <small className='border-bottom mb-1 pb-1'>{`Ganancias intereses mensuales: $${loan.interestGainsMonth.toFixed(2)}`}</small>\n            <small >{`Interes completo: ${loan.paidRatio.toFixed(2)}%`}</small>\n            <small >{`Interes anual: ${loan.annualInterest.toFixed(2)}%`}</small>\n            <small >{`Interes mensual: ${loan.monthlyInterest.toFixed(2)}%`}</small>\n        </div> \n    )\n}\n\nexport default Popover  ","import React, { useState } from 'react'\nimport Popover from '../Samples/Popover'\n\nconst User = (props) => {\n    const { id, name, age, dni, address, phone, email, loan } = props.self\n\n    const [userUtil, setUserUtil] = useState({\n        isHidden: true\n    })\n\n    const togglePopover = () => {\n        setUserUtil({\n            isHidden: !userUtil.isHidden\n        })\n    }\n\n    return (\n        <div className={!loan.scam ? \"card border-success\" : \"card border-danger\"} style={{ maxWidth: '270px' }}>\n            <div className=\"card-header\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <div className='text-dark'>{phone}</div>\n                    <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={e => props.deleteUser(id)}></button>\n                </div>\n            </div>\n            <div className={!loan.scam ? 'card-body text-success' : 'card-body text-danger'}>\n                <h5 className=\"card-title\">{`${name}. ${age} años`}</h5>\n                <div className=\"card-text\">{\n                    `$${loan.loan} a ${loan.interest}% por ${loan.fees} ${loan.timeUnity.toLowerCase()}`\n                }<br />\n                    <div className=\"d-flex flex-column\">\n                        <small>Fiabilidad del {100 - loan.scamRatio}%</small>\n                        <small>DNI: {dni}</small>\n                        <small>{address}</small>\n                        <small>{email}</small>\n                        <div className=\"d-flex justify-content-end\">\n                            <button className=\"btn btn-outline-success btn-sm my-1\" type=\"button\" onClick={togglePopover}>\n                                {userUtil.isHidden ? \"Ver más\" : \"Esconder\"}\n                            </button>\n                        </div>\n                    </div>\n                    <Popover isHidden={userUtil.isHidden} loan={loan}></Popover>\n\n                </div>\n\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default User\n","import React from 'react'\nimport User from './User'\n\nconst Users = (props) => {\n    const {users, setUsers} = props\n\n    const deleteUser = id => {\n        setUsers({ loans: users.loans.filter(e => !(e.id === id)) })\n    }\n\n    return (    \n        <div className=\"d-flex gap-3 flex-wrap justify-content-center align-items-start\">\n            {\n                users.loans.length === 0 ? <div className=\"card border-primary\" style={{ maxWidth: '20rem' }}>\n                    <div className=\"card-header text-primary\">Upps...</div>\n                    <div className='card-body text-primary'>\n                        <h5 className=\"card-title\">No hay préstamos</h5>\n                        <div className=\"card-text\">\n                            Añade préstamos llenando los datos de arriba\n                        </div>\n                    </div>\n                </div> : users.loans.map(user => <User key={user.id} self={user} deleteUser={deleteUser}></User>)\n            }\n        </div>\n    )\n}\n\nexport default Users","import React from 'react'\nimport Users from './Users/Users'\n\nconst Results = (props) => {\n\n\n    const { users, results, refresh, setUsers, setResults, initialResults } = props\n\n    const deleteAll = () => {\n        setUsers({ loans: [] })\n        setResults(initialResults)\n    }\n\n    return (\n        <>\n            <div className='row g-3'>\n                <div className=\"col-md-6\">\n                    <legend className='text-center'>Ganacias</legend>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"totalInterestGains\" className=\"form-label\">Ganacias de intereses totales</label>\n                        <input readOnly name='totalInterestGains' type=\"text\" className=\"form-control\" id=\"totalInterestGains\" value={`$${results.totalGains}`} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"yearGains\" className=\"form-label\">Ganacias de intereses por año </label>\n                        <input readOnly name='yearGains' type=\"text\" className=\"form-control\" id=\"yearGains\" value={`$${results.interestGainsYear}`} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"monthGains\" className=\"form-label\">Ganacias de intereses por mes</label>\n                        <input readOnly name='monthGains' type=\"text\" className=\"form-control\" id=\"monthGains\" value={`$${results.interestGainsMonth}`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"yearGains\" className=\"form-label\">Capital abonado por año </label>\n                        <input readOnly name='yearGains' type=\"text\" className=\"form-control\" id=\"yearGains\" value={`$${results.gainsPerYear - results.interestGainsYear}`} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"monthGains\" className=\"form-label\">Capital abonado por mes</label>\n                        <input readOnly name='monthGains' type=\"text\" className=\"form-control\" id=\"monthGains\" value={`$${results.gainsPerMonth - results.interestGainsMonth}`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"yearGains\" className=\"form-label\">Dinero recogido por año </label>\n                        <input readOnly name='yearGains' type=\"text\" className=\"form-control\" id=\"yearGains\" value={`$${results.gainsPerYear}`} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"monthGains\" className=\"form-label\">Dinero recogido por mes</label>\n                        <input readOnly name='monthGains' type=\"text\" className=\"form-control\" id=\"monthGains\" value={`$${results.gainsPerMonth}`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"successfulLoans\" className=\"form-label\">Pŕestamos exitosos</label>\n                        <input readOnly name='successfulLoans' type=\"text\" className=\"form-control\" id=\"successfulLoans\" value={results.successfulLoans} />\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <legend className='text-center'>Pérdidas</legend>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"totalInterestLosses\" className=\"form-label\">Pérdidas de intereses totales</label>\n                        <input readOnly name='totalInterestLosses' type=\"text\" className=\"form-control\" id=\"totalInterestLosses\" value={`$${results.totalLosses}`} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"yearLosses\" className=\"form-label\">Pérdidas de intereses por año</label>\n                        <input readOnly name='yearLosses' type=\"text\" className=\"form-control\" id=\"yearLosses\" value={`$${results.interestLossesYear}`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"monthLosses\" className=\"form-label\">Pérdidas de intereses por mes</label>\n                        <input readOnly name='monthLosses' type=\"text\" className=\"form-control\" id=\"monthLosses\" value={`$${results.interestLossesMonth}`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"yearLosses\" className=\"form-label\">Capital perdido por año</label>\n                        <input readOnly name='yearLosses' type=\"text\" className=\"form-control\" id=\"yearLosses\" value={`$${(results.lossesPerYear - results.interestLossesYear) }`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"monthLosses\" className=\"form-label\">Capital perdido por mes</label>\n                        <input readOnly name='monthLosses' type=\"text\" className=\"form-control\" id=\"monthLosses\" value={`$${results.lossesPerMonth - results.interestLossesMonth}`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"yearLosses\" className=\"form-label\">Dinero perdido por año</label>\n                        <input readOnly name='yearLosses' type=\"text\" className=\"form-control\" id=\"yearLosses\" value={`$${results.lossesPerYear}`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"monthLosses\" className=\"form-label\">Dinero perdido por mes</label>\n                        <input readOnly name='monthLosses' type=\"text\" className=\"form-control\" id=\"monthLosses\" value={`$${results.lossesPerMonth}`}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"failedLoans\" className=\"form-label\">Préstamos fracasados</label>\n                        <input readOnly name='failedLoans' type=\"text\" className=\"form-control\" id=\"failedLoans\" value={results.failedLoans} />\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <label htmlFor=\"totalMoney\" className=\"form-label\">Dinero ganado en total</label>\n                    <input readOnly name='totalMoney' type=\"text\" className=\"form-control\" id=\"totalMoney\" value={`$${results.totalMoneyReceived}`} />\n                </div>\n                <div className=\"col-md-6\">\n                    <label htmlFor=\"totalLosses\" className=\"form-label\">Dinero perdido en total</label>\n                    <input readOnly name='totalLosses' type=\"text\" className=\"form-control\" id=\"totalLosses\" value={`$${results.totalMoneyLost}`} />\n                </div>\n                <div className=\"btn-group\" role={'group'} >\n                    <button onClick={refresh} className=\"btn btn-primary w-50\">Refrescar</button>\n                    <button onClick={deleteAll} className=\"btn btn-danger w-50\">Eliminar todos</button>\n                </div>\n            </div>\n            <hr />\n            <Users users={users} setUsers={setUsers}/>\n        </>\n\n    )\n}\n\nexport default Results","import React from 'react'\n\nconst Records = () => {\n  return (\n    <div className='text-center'>Próximamente...</div>\n  )\n}\n\nexport default Records","import React, { useState } from 'react';\n\n// * Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\n\n\n// * Components\nimport Loan from './components/Loan';\nimport Calculations from './components/Calculations';\nimport Simulations from './components/Simulations';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Results from './components/Results';\nimport Records from './components/Records'\n\n// * Styles\nimport './styles/main.css'\n\nconst App = () => {\n  const singleLoanInitialState = {\n    loan: 1,\n    interest: 5 + '%',\n    fees: 1,\n    timeUnity: \"Meses\"\n  }\n\n  const loansInitialState = {\n    loans: [\n      //   {\n      //     id: 'item1',\n      //     name: 'Brayian',\n      //     age: 27,\n      //     dni: 65754536,\n      //     address: '4-5 N-T NewYork',\n      //     phone: 31512354321,\n      //     email: 'example@example.com',\n      //     loan: {\n      //       loan: 350000,\n      //       interest: 8,\n      //       fees: 6,\n      //       timeUnity: 'Mese(s)',\n      //       months: 6,\n      //       scam: false,\n      //       scamRatio: 30,\n      //       feeGain: 28000,\n      //       capitalSubscription: 58333.333,\n      //       feePayment: 86333.333,\n      //       totalGains: 168000,\n      //       paidRatio: 60,\n      //       annualInterest: 48,\n      //       monthlyInterest: 8,\n      //       interestGainsYear: 168000,\n      //       interestGainsMonth: 28000,\n      //       gainsYear: 518000,\n      //       gainsMonth: 86333.333,\n      //       capitalYear: 350000,\n      //       capitalMonth: 85333.333\n      //     }\n      //   },\n      //   {\n      //     id: 'item2',\n      //     name: 'Nicolas',\n      //     age: 23,\n      //     dni: 65754536,\n      //     address: '4-5 N-T NewYork',\n      //     phone: 31512354321,\n      //     email: 'example@example.com',\n      //     loan: {\n      //       loan: 550000,\n      //       interest: 7,\n      //       fees: 6,\n      //       timeUnity: 'Mese(s)',\n      //       months: 6,\n      //       scam: false,\n      //       scamRatio: 18,\n      //       feeGain: 38500,\n      //       capitalSubscription: 91666.67,\n      //       feePayment: 130166.67,\n      //       totalGains: 231000,\n      //       paidRatio: 42,\n      //       annualInterest: 42,\n      //       monthlyInterest: 7,\n      //       interestGainsYear: 231000,\n      //       interestGainsMonth: 38500,\n      //       gainsYear: 7810000,\n      //       gainsMonth: 130166.67,\n      //       capitalYear: 550000,\n      //       capitalMonth: 91666.67\n      //     }\n      //   },\n      //   {\n      //     id: 'item3',\n      //     name: 'Lucia',\n      //     age: 32,\n      //     dni: 65754536,\n      //     address: '4-5 N-T NewYork',\n      //     phone: 31512354321,\n      //     email: 'example@example.com',\n      //     loan: {\n      //       loan: 180000,\n      //       interest: 10,\n      //       fees: 3,\n      //       timeUnity: 'Mese(s)',\n      //       months: 3,\n      //       scam: false,\n      //       scamRatio: 39,\n      //       feeGain: 18000,\n      //       capitalSubscription: 60000,\n      //       feePayment: 78000,\n      //       totalGains: 54000,\n      //       paidRatio: 30,\n      //       annualInterest: 30,\n      //       monthlyInterest: 10,\n      //       interestGainsYear: 54000,\n      //       interestGainsMonth: 18000,\n      //       gainsYear: 234000,\n      //       gainsMonth: 78000,\n      //       capitalYear: 180000,\n      //       capitalMonth: 60000\n      //     }\n      //   }\n    ]\n  }\n\n  const initialResults = {\n    totalGains: 0,\n    totalLosses: 0,\n    gainsPerMonth: 0,\n    gainsPerYear: 0,\n    interestGainsMonth: 0,\n    interestGainsYear: 0,\n    lossesPerMonth: 0,\n    lossesPerYear: 0,\n    interestLossesMonth: 0,\n    interestLossesYear: 0,\n    failedLoans: 0,\n    successfulLoans: 0,\n    totalMoneyReceived: 0,\n    totalMoneyLost: 0\n  }\n\n  // todo: Update the records inside other components\n  const [loansState, loansSetState] = useState(loansInitialState)\n\n  // todo: Calculate the loan on the home view\n  const [singleLoanState, singleLoanSetState] = useState(singleLoanInitialState)\n\n  // todo: Calculate the final results with the stored data\n  const [results, setResults] = useState(initialResults)\n\n  // todo util: Check out each input\n  const cheakOutInput = value => {\n    if (value === '') {\n      return 0\n    }\n    return value\n  }\n\n  // ? Functions to pass in the components\n\n  const updateGlobalState = (key, value) => {\n    value = cheakOutInput(value)\n    singleLoanSetState({ ...singleLoanState, [key]: value })\n\n  }\n\n  const updatePercentageInput = (key, value) => {\n    value = value.replace('%', '')\n    if (singleLoanState[key].length > value.length) {\n      singleLoanSetState({ ...singleLoanState, [key]: value })\n    } else {\n      singleLoanSetState({ ...singleLoanState, [key]: value + '%' })\n    }\n  }\n\n  const blurPercetageInput = (e) => {\n    let value = e.target.value\n    value = value.replace('%', '')\n    singleLoanSetState({ ...singleLoanState, [e.target.name]: value + '%' })\n  }\n\n  const appendUser = user => {\n    // ? Push a new user in the array\n    loansState.loans.push(user)\n    loansSetState({ ...loansState })\n\n    // ? Clean the last final results\n    setResults(initialResults)\n\n    // ? Calculate the final results with the existing data\n    const updates = {\n      totalGains: results.totalGains + (!user.loan.scam ? + user.loan.totalGains : 0),\n      totalLosses: results.totalLosses + (user.loan.scam ? + user.loan.totalGains : 0),\n      successfulLoans: results.successfulLoans + (!user.loan.scam ? 1 : 0),\n      failedLoans: results.failedLoans + (user.loan.scam ? 1 : 0),\n      totalMoneyReceived: results.totalMoneyReceived + (!user.loan.scam ? user.loan.loan + user.loan.totalGains : 0),\n      totalMoneyLost: results.totalMoneyLost + (user.loan.scam ? user.loan.loan + user.loan.totalGains : 0),\n      gainsPerMonth: results.gainsPerMonth + (!user.loan.scam ? user.loan.gainsMonth : 0),\n      gainsPerYear: results.gainsPerYear + (!user.loan.scam ? user.loan.gainsYear : 0),\n      interestGainsMonth: results.interestGainsMonth + (!user.loan.scam ? user.loan.interestGainsMonth : 0),\n      interestGainsYear: results.interestGainsYear + (!user.loan.scam ? user.loan.interestGainsYear : 0),\n      lossesPerMonth: results.lossesPerMonth + (user.loan.scam ? user.loan.gainsMonth : 0),\n      lossesPerYear: results.lossesPerYear + (user.loan.scam ? user.loan.gainsYear : 0),\n      interestLossesMonth: results.interestLossesMonth + (user.loan.scam ? user.loan.interestGainsMonth : 0),\n      interestLossesYear: results.interestLossesYear + (user.loan.scam ? user.loan.interestGainsYear : 0)\n    }\n    setResults({ ...results, ...updates })\n  }\n\n  const refreshResults = () => {\n\n    // ? Initializate the results from scratch\n    const updates = initialResults\n\n    // todo: Calculate the final results from scratch\n    loansState.loans.forEach(user => {\n      updates.totalGains = updates.totalGains + (!user.loan.scam ? user.loan.totalGains : 0)\n      updates.totalLosses = updates.totalLosses + (user.loan.scam ? user.loan.totalGains : 0)\n      updates.successfulLoans = updates.successfulLoans + (!user.loan.scam ? 1 : 0)\n      updates.failedLoans = updates.failedLoans + (user.loan.scam ? 1 : 0)\n      updates.totalMoneyReceived = updates.totalMoneyReceived + (!user.loan.scam ? user.loan.loan + user.loan.totalGains : 0)\n      updates.totalMoneyLost = updates.totalMoneyLost + (user.loan.scam ? user.loan.loan + user.loan.totalGains : 0)\n      updates.gainsPerMonth = updates.gainsPerMonth + (!user.loan.scam ? user.loan.gainsMonth : 0)\n      updates.gainsPerYear = updates.gainsPerYear + (!user.loan.scam ? user.loan.gainsYear : 0)\n      updates.interestGainsMonth = updates.interestGainsMonth + (!user.loan.scam ? user.loan.interestGainsMonth : 0)\n      updates.interestGainsYear = updates.interestGainsYear + (!user.loan.scam ? user.loan.interestGainsYear : 0)\n      updates.lossesPerMonth = updates.lossesPerMonth + (user.loan.scam ? user.loan.gainsMonth : 0)\n      updates.lossesPerYear = updates.lossesPerYear + (user.loan.scam ? user.loan.gainsYear : 0)\n      updates.interestLossesMonth = updates.interestLossesMonth + (user.loan.scam ? user.loan.interestGainsMonth : 0)\n      updates.interestLossesYear = updates.interestLossesYear + (user.loan.scam ? user.loan.interestGainsYear : 0)\n    })\n    setResults(updates)\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar></Navbar>\n        <Routes>\n          <Route exact path='/' element={\n            <div className='container my-4'>\n              <div className=\"row g-3\">\n                <Loan\n                  updatePercentageInput={updatePercentageInput}\n                  updateGlobalState={updateGlobalState}\n                  blurPercetageInput={blurPercetageInput}\n                  loan={singleLoanState.loan}\n                  fees={singleLoanState.fees}\n                  interest={singleLoanState.interest}\n                  timeUnity={singleLoanState.timeUnity}>\n                </Loan>\n                <Calculations\n                  loan={singleLoanState.loan}\n                  fees={singleLoanState.fees}\n                  interest={singleLoanState.interest}>\n                </Calculations>\n              </div>\n            </div>}>\n          </Route>\n          <Route path='simulations' element={\n            <div>\n              <div className=\"container my-4\">\n                <Simulations\n                  appendUser={appendUser}\n                  users={loansState}\n                >\n                </Simulations>\n                <hr />\n                <Results\n                  users={loansState}\n                  setUsers={loansSetState}\n                  results={results}\n                  setResults={setResults}\n                  refresh={refreshResults}\n                  initialResults={initialResults} />\n              </div>\n            </div>\n          }></Route>\n          <Route path='records' element={<Records></Records>}>\n          </Route>\n        </Routes>\n\n      </Router>\n\n\n    </>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}